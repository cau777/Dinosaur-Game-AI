#pragma kernel CSMain

RWStructuredBuffer<float> Reference;

float MutationChance;
float Time;

//Random Function
//Current time is added to make it more random
float hash12(float2 p)
{
    p += Time;
    float3 p3 = frac(float3(p.xyx) * .1031);
    p3 += dot(p3, p3.yzx + 33.33);
    return frac((p3.x + p3.y) * p3.z);
}

[numthreads(64,1,1)]
void CSMain(uint id : SV_DispatchThreadID, uint groupId : SV_GroupThreadID)
{
    const float chance = MutationChance /= 3.0;
    const float rand = hash12(float2(id, groupId));

    if (rand < chance)
    {
        Reference[id] *= -1;
    }
    else if (rand < chance * 2)
    {
        Reference[id] = (hash12(float2(groupId, id)) - 1) * 4;
    }
    else if (rand < chance * 3)
    {
        Reference[id] += Reference[id] * (hash12(float2(groupId, id)) - 1) * 2;
    }
}
